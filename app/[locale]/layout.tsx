import type { Metadata } from "next";
import "./globals.css";
import { Geist, Geist_Mono } from "next/font/google";
import Header from "@/components/common/header";
import ScrollToTopButton from "@/components/common/scroll-to-top-button";
import SocialContainer from "@/components/common/social-container";
import Footer from "@/components/common/footer";
import { AbstractIntlMessages, NextIntlClientProvider } from "next-intl";
import { getHeaderData } from "@/lib/queries/getHeaderData";
import { getFooterData } from "@/lib/queries/getFooterData";
import { getMessages } from "next-intl/server";
import { notFound } from "next/navigation";
import { Locale, routing } from "@/i18n/routing";
import { ReactNode } from "react";
import ReactQueryProvider from "@/providers/query-client-provier";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
  params,
}: {
  children: ReactNode;
  params: Promise<{ locale: string }>;
}) {
  const { locale } = await params;
  // Ensure that the incoming `locale` is valid
  if (!routing.locales.includes(locale as Locale)) {
    notFound();
  }
  // Providing all messages to the client
  // side is the easiest way to get started
  const messages: AbstractIntlMessages = await getMessages();

  const headerData = await getHeaderData();
  const footerData = await getFooterData();

  return (
    <html lang={locale} dir={locale === "ar" ? "rtl" : "ltr"}>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased min-h-screen`}
      >
        <NextIntlClientProvider messages={messages}>
          <ReactQueryProvider>
            <Header data={headerData} />
            {children}
            <Footer data={footerData} />
            <ScrollToTopButton />
            <SocialContainer />
          </ReactQueryProvider>
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
